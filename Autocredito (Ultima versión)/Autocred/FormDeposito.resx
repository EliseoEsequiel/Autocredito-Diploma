<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdEXIT.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>