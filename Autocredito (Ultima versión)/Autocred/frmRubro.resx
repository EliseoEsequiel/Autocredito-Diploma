<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGUARDAR.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5mgAxwAAAABJRU5ErkJggg==
</value>
  </data>
</root>